version: 2
jobs:
  build-and-deploy:
    docker:
      - image: circleci/node:dubnium-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run:
          name: Greeting
          command: echo Hello, world.
      - run:
          name: Print the Current Time
          command: date
      - run :
          name: yarn install cmd
          command: yarn install
      - run :
          name: yarn build cmd
          command: yarn build
      - run:
          name: Copy artifacts to workspace
          command: |
            cp ./dist /tmp/server-build -r
      - store_artifacts:
          path: /tmp/server-build
      - run:
          name: Deploy app
          command: npx netlify-cli deploy --prod --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID_FINALTPFRT --dir=/tmp/server-build
      - save_cache:
          paths:
            - ./cache-folder
          key: v1-dependencies-{{ .Environment.CACHE_VERSION }}

  deploy:
    docker:
      - image: circleci/node:dubnium-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - store_artifacts:
          path: /tmp/server-build
      - run:
          name: Deploy app
          command: npx netlify-cli deploy --prod --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID_FINALTPFRT --dir=/tmp/server-build

  #copy from cd tp
  doc-build:
    docker:
      - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run: yarn doc:build
      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp doc-server/ /tmp/server-doc -r
      - store_artifacts:
          path: /tmp/server-build
      - persist_to_workspace:
          root: /tmp
          paths:
            - server-doc

  docker-build-and-push:
    working_directory: /dockerapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: just an echo
          command: echo "hello docker !"
      - run:
          name: build app 
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: we publish the app on docker hub
          environment:
            CIRCLE_BUILD_NUM: 1
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/frontend_final:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_HUB_USER_ID/frontend_final:latest
            docker push $DOCKER_HUB_USER_ID/frontend_final:$CIRCLE_BUILD_NUM
            docker push $DOCKER_HUB_USER_ID/frontend_final:latest


workflows:
  version: 2
  build-general:
    jobs:
      - build-and-deploy
      - docker-build-and-push:
          requires:
            - build-and-deploy
